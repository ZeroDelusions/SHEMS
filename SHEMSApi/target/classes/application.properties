spring.application.name=SHEMSApi
server.port=8080
server.address=0.0.0.0
# ===============================
# = DATA SOURCE
# ===============================
spring.datasource.url=jdbc:postgresql://localhost:5432/shemsdb
spring.datasource.username=
spring.datasource.password=
spring.datasource.driver-class-name=org.postgresql.Driver
# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle=true
spring.datasource.validationQuery=SELECT 1
# ===============================
# = JPA / HIBERNATE
# ===============================
# Show or not log for each sql query
spring.jpa.show-sql=true
# Hibernate ddl auto (create, create-drop, update): with "create-drop" the database
# schema will be automatically created afresh for every start of application
#spring.jpa.generate-ddl = false
spring.jpa.hibernate.ddl-auto=create-drop
# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true

# ===============================
# = GOOGLE OAuth2
# ===============================
# DON'T FORGET TO REMOVE BEFORE ADDING TO GITHUB
spring.security.oauth2.client.registration.google.client-id=336762474905-01c1bbvjnl6th2904b027g85krpqlvs4.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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

#spring.security.oauth2.client.registration.google.client-id=1638024086-o3l5n7nrsn9pt5do1u83u2gui1vuri4o.apps.googleusercontent.com
#spring.security.oauth2.client.registration.google.client-secret=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
#spring.security.oauth2.client.registration.google.scope=profile, email
#spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/login/oauth2/code/google
#spring.security.oauth2.client.registration.google.authorization-grant-type=authorization_code
#spring.security.oauth2.client.registration.google.client-name=Google
